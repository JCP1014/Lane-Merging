[0, 1.8000000000000007, 1.9000000000000008, 4.7, 7.59999999999999, 7.6999999999999895, 8.399999999999988, 10.899999999999979, 12.499999999999973, 13.59999999999997, 16.899999999999974, 17.499999999999982, 21.400000000000038, 23.300000000000065, 27.700000000000127, 30.70000000000017, 35.70000000000024, 36.900000000000254, 37.80000000000027, 39.800000000000296, 49.20000000000043, 51.60000000000046, 54.500000000000504, 56.50000000000053, 57.90000000000055, 65.10000000000058, 65.20000000000057, 66.60000000000049, 67.70000000000043, 69.60000000000032, 70.40000000000028, 70.80000000000025, 72.10000000000018, 73.20000000000012, 74.20000000000006, 75.49999999999999, 79.69999999999975, 86.69999999999935, 88.29999999999926, 88.59999999999924, 92.19999999999904, 92.69999999999901, 93.59999999999896, 94.5999999999989, 102.29999999999846, 105.69999999999827, 108.19999999999813, 110.79999999999798, 113.09999999999785, 115.7999999999977, 116.59999999999765, 116.89999999999763, 117.4999999999976, 120.19999999999744, 121.0999999999974, 124.19999999999722, 127.69999999999702, 128.099999999997, 128.499999999997, 129.39999999999694, 129.7999999999969, 132.39999999999677, 136.9999999999965, 138.6999999999964, 139.49999999999636, 141.29999999999626, 142.09999999999621, 142.5999999999962, 143.79999999999612, 147.89999999999588, 154.19999999999553, 155.49999999999545, 157.49999999999534, 168.4999999999947, 170.5999999999946, 172.69999999999447, 176.59999999999425, 177.09999999999422, 178.69999999999413, 178.99999999999412, 179.2999999999941, 180.999999999994, 181.49999999999397, 183.19999999999388, 185.19999999999376, 185.99999999999372, 192.69999999999334, 195.1999999999932, 197.0999999999931, 197.39999999999307, 199.59999999999295, 200.79999999999288, 201.49999999999284, 203.29999999999274, 205.29999999999262, 216.69999999999197, 216.99999999999196, 218.29999999999188, 218.89999999999185, 218.99999999999184, 221.5999999999917]
[0, 4.100000000000002, 4.7, 5.899999999999996, 6.799999999999993, 7.49999999999999, 8.499999999999988, 13.999999999999968, 16.499999999999968, 16.69999999999997, 19.300000000000008, 21.200000000000035, 24.000000000000075, 29.000000000000146, 35.00000000000023, 39.30000000000029, 39.800000000000296, 41.60000000000032, 41.70000000000032, 44.50000000000036, 45.300000000000374, 48.10000000000041, 48.80000000000042, 49.40000000000043, 49.80000000000044, 54.4000000000005, 54.70000000000051, 59.60000000000058, 61.2000000000006, 63.20000000000063, 63.50000000000063, 64.6000000000006, 65.10000000000058, 69.30000000000034, 76.59999999999992, 77.59999999999987, 81.89999999999962, 85.29999999999943, 88.29999999999926, 89.79999999999917, 96.99999999999876, 98.49999999999868, 101.39999999999851, 103.89999999999837, 105.1999999999983, 105.89999999999826, 106.69999999999821, 107.39999999999817, 110.89999999999797, 112.99999999999785, 113.49999999999783, 119.79999999999747, 124.99999999999717, 125.89999999999712, 126.39999999999709, 127.69999999999702, 131.09999999999684, 136.59999999999653, 140.4999999999963, 140.89999999999628, 147.29999999999592, 150.19999999999575, 160.79999999999515, 163.19999999999501, 164.29999999999495, 166.49999999999483, 167.99999999999474, 169.39999999999466, 173.49999999999443, 176.19999999999428, 179.59999999999408, 183.69999999999385, 184.6999999999938, 186.4999999999937, 191.09999999999343, 192.29999999999336, 193.1999999999933, 194.09999999999326, 195.0999999999932, 200.09999999999292, 200.99999999999287, 201.49999999999284, 203.8999999999927, 205.39999999999262, 208.39999999999245, 210.8999999999923, 213.19999999999217, 214.99999999999207, 215.69999999999203, 217.09999999999195, 222.89999999999162, 226.7999999999914, 232.1999999999911, 233.19999999999104, 237.1999999999908, 245.29999999999035, 251.59999999999, 255.89999999998975, 256.59999999998985, 258.6999999999903, 258.9999999999904]
[0, 1, 1.7000000000000006, 9.299999999999985, 10.69999999999998, 12.399999999999974, 15.899999999999961, 16.999999999999975, 19.700000000000014, 23.60000000000007, 27.000000000000117, 27.20000000000012, 27.500000000000124, 27.80000000000013, 29.20000000000015, 29.700000000000156, 30.200000000000163, 37.600000000000264, 40.400000000000304, 41.100000000000314, 44.40000000000036, 45.70000000000038, 51.800000000000466, 56.30000000000053, 58.20000000000056, 59.20000000000057, 59.80000000000058, 63.20000000000063, 64.00000000000064, 64.10000000000063, 72.70000000000014, 73.4000000000001, 75.10000000000001, 75.2, 76.79999999999991, 80.69999999999969, 84.19999999999949, 84.99999999999945, 91.99999999999905, 93.09999999999899, 93.29999999999897, 93.59999999999896, 98.0999999999987, 99.19999999999864, 101.49999999999851, 101.5999999999985, 102.69999999999844, 102.89999999999843, 104.39999999999834, 106.69999999999821, 107.09999999999819, 108.19999999999813, 108.89999999999809, 113.9999999999978, 115.19999999999773, 115.5999999999977, 116.19999999999767, 119.49999999999748, 122.59999999999731, 122.99999999999729, 124.79999999999718, 125.69999999999713, 126.2999999999971, 126.59999999999708, 131.39999999999682, 136.59999999999653, 137.2999999999965, 138.39999999999642, 143.59999999999613, 145.699999999996, 151.79999999999566, 152.09999999999565, 153.99999999999554, 158.49999999999528, 160.89999999999515, 171.19999999999456, 173.29999999999444, 173.39999999999444, 174.0999999999944, 175.09999999999434, 177.79999999999418, 178.79999999999413, 179.79999999999407, 181.79999999999396, 183.89999999999384, 187.8999999999936, 189.9999999999935, 191.29999999999342, 194.59999999999323, 195.1999999999932, 196.09999999999314, 196.6999999999931, 197.0999999999931, 197.29999999999308, 198.799999999993, 201.39999999999284, 202.89999999999276, 203.7999999999927, 205.8999999999926, 207.3999999999925, 209.3999999999924]
dp: 258.6999999999903 0.0984189510345459
fcfg_v2: 259.59999999998985

if a[0] <= t and b[0] <= t and c[0] <= t:
                if b[1] >= a[1] and b[1] >= c[1]:
                    qX.append( ('A', a.pop(0)) )
                    qY.append( ('C', c.pop(0)) )
                elif c[1] >= a[1] and c[1] >= b[1]:
                    qX.append( ('A', a.pop(0)) )
                    qY.append( ('B', b.pop(0)) )
                elif a[1] >= b[1] and a[1] >= c[1]:
                    qX.append( ('B', b.pop(0)) )
                    qY.append( ('C', c.pop(0)) )